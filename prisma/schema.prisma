// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  image         String?
  balance       Float     @default(0)
  /// [UserType]
  userType      String    @default("buyer") // buyer or seller
  shopSlug      String?   @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products      Product[]
  sales         Sale[]
  purchases     Sale[]    @relation("Buyer")
  withdrawals   Withdrawal[]
  paymentMethod PaymentMethod?
  shopCustomization ShopCustomization?
}

model Product {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float
  imageUrl    String
  fileUrl     String
  isVisible   Boolean  @default(true)
  isArchived  Boolean  @default(false)
  displayOrder Int     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  sales       Sale[]
  thumbnails  Thumbnail[]
}

model Sale {
  id           String   @id @default(cuid())
  productId    String
  product      Product  @relation(fields: [productId], references: [id])
  sellerId     String
  seller       User     @relation(fields: [sellerId], references: [id])
  buyerId      String?
  buyer        User?     @relation("Buyer", fields: [buyerId], references: [id])
  amount       Float
  razorpayId   String
  status       String
  createdAt    DateTime @default(now())
}

model Withdrawal {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  amount      Float
  status      String   @default("pending") // pending, processing, approved, rejected, completed
  bankDetails String   // Store bank account details as JSON
  transactionDetails String? // Store transaction details as JSON
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PaymentMethod {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  /// [PaymentMethodStringType]
  type        String   // "bank" or "upi"
  /// [PaymentMethodType]
  details     Json   // Store payment details as JSON
  isDefault   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  history     PaymentMethodHistory[]
}

model PaymentMethodHistory {
  id              String   @id @default(cuid())
  paymentMethodId String
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  /// [PaymentMethodStringType]
  type            String   // "bank" or "upi"
  /// [PaymentMethodType]
  details         Json     // Store payment details as JSON
  createdAt       DateTime @default(now())
}

model Thumbnail {
  id          String   @id @default(cuid())
  fileUrl     String
  displayOrder Int     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  productId   String
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ShopCustomization {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  bannerImage       String?
  bannerLink        String?
  bannerText        String?
  featuredProducts  String[] // Array of product IDs
  productLayout     String   @default("grid") // grid, list, masonry
  accentColor       String   @default("#6366f1") // Default indigo color
  showPrice         Boolean  @default(true)
  showDescription   Boolean  @default(true)
  showThumbnails    Boolean  @default(true)
  customCss         String?
  customJs          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
